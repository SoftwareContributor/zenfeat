{"title":"PWA Elements","description":"Using PWA Elements","url":"/docs/pwa-elements","contributors":["dotnetkow","mlynch"],"lastUpdated":"2018-06-01T00:00:00.000Z","headings":[{"id":"pwa-elements","level":1,"text":"PWA Elements"},{"id":"installation","level":2,"text":"Installation"}],"srcPath":"./docs-md/getting-started/pwa-elements.md","content":"\n<h1 id=\"pwa-elements\">\n  \n  PWA Elements\n  \n</h1>\n<p>Some Capacitor plugins, such as <code>Camera</code>, have web-based UI available when not running natively. For example, calling <code>Camera.getPhoto()</code> will \nload a responsive photo-taking experience when running on the web or electron:</p>\n<img src=\"/assets/img/docs/pwa-elements.png\" style=\"height: 200px\" />\n\n<p>This UI is implemented using a subset of the <a href=\"http://ionicframework.com/\">Ionic Framework</a> web components. Due to the magic of Shadow DOM, these components should not conflict\nwith your own UI whether you choose to use Ionic or not.</p>\n\n<h2 id=\"installation\">\n  <a class=\"heading-link\" href=\"#installation\"><app-icon name=\"link\"></app-icon>\n  Installation\n  </a>\n</h2>\n<p>To enable these controls, you must add <code>@ionic/pwa-elements</code> to your app. </p>\n<p>A typical installation involves either adding the following script tag to the <code>&lt;head&gt;</code> of the <code>index.html</code> for your app:</p>\n<pre><code><script src=\"https://unpkg.com/@ionic/pwa-elements@latest/dist/ionicpwaelements.js\"></script></code></pre><p>Or by installing and then importing from <code>@ionic/pwa-elements</code>:</p>\n<pre><code>npm install @ionic/pwa-elements</code></pre><pre><code>import '@ionic/pwa-elements';</code></pre>"}