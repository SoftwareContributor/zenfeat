{"title":"Configuring Your App","description":"Native Project Configuration","url":"/docs/basics/configuring-your-app","contributors":["jcesarmobile","dotnetkow"],"lastUpdated":"2018-06-01T00:00:00.000Z","headings":[{"id":"configuring-your-app","level":1,"text":"Configuring Your App"},{"id":"common-configuration","level":2,"text":"Common Configuration"},{"id":"native-configuration","level":2,"text":"Native Configuration"}],"srcPath":"./docs-md/basics/configuring-your-app.md","content":"\n<h1 id=\"configuring-your-app\">\n  \n  Configuring Your App\n  \n</h1>\n<p>Capacitor embraces the idea of &quot;Code once, configure everywhere&quot;: configuration is\nmanaged per-platform instead of in an abstracted system like a <code>config.xml</code> in Cordova, for example.</p>\n<p>This is an important point, because it means that Capacitor requires you to be more involved in the native project configuration than with Cordova, for example. However,\nwe think this is the right approach, because it makes it easy to follow existing Native iOS/Android guides, get help on Stack Overflow, and have full control over your project.</p>\n<p>Additionally, because configuring a Capacitor project is no different from configuring an iOS or Android project, existing native development teams can easily work alongside\nweb developers, with each side using the tools and SDKs they are familiar with. Of course, we believe web developers can handle all the required Native configuration on their own, and \nthe Capacitor documentation exists to help web developers do just that.</p>\n\n<h2 id=\"common-configuration\">\n  <a class=\"heading-link\" href=\"#common-configuration\"><app-icon name=\"link\"></app-icon>\n  Common Configuration\n  </a>\n</h2>\n<p>Capacitor has some high level configuration options that are set in <code>capacitor.config.json</code>. These generally don&#39;t modify native functionality, but control Capacitor&#39;s tooling.</p>\n<p>The current ones you might configure are:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-javascript\"><code class=\"language-javascript\">{\n  // Sets the directory of your built web assets. This is the directory that will be\n  // used to run your app in a native environment\n  \"webDir\": \"public\",\n\n  // Whether to use capacitor.js as a bundle that is copied to your web code,\n  // or require it to be bundled/imported through a typical\n  // typescript/babel/webpack/rollup workflow.\n  //\n  // The starter project sets this to true, but if you're using Ionic or another framework,\n  // you'll probably want this to be false (default is false)\n  \"bundledWebRuntime\": false,\n\n  // On Windows, we aren't able to automatically open Android Studio\n  // without knowing the full path. The default is set to the default\n  // Android Studio install path, but you may change it manually.\n  \"windowsAndroidStudioPath\": 'C:\\\\Program Files\\\\Android\\\\Android Studio\\\\bin\\\\studio64.exe',\n\n  // Server object contains port and url configurations \n  \"server\": {\n    // You can make the app to load an external url (i.e. to live reload)\n    \"url\": \"http://192.168.1.33:8100\",\n    // You can configure the local hostname, but it's recommended to keep localhost\n    // as it allows to run web APIs that require a secure context such as\n    // navigator.geolocation and MediaDevices.getUserMedia\n    \"hostname\": \"app\",\n    // Normally all external URLs are opened in the browser. By setting this option, you tell\n    // Capacitor to open URLs belonging to these hosts inside its WebView.\n    \"allowNavigation\": [\n      \"example.org\",\n      \"*.example.org\",\n      \"192.0.2.1\"\n    ]\n  },\n  \"android\": {\n    // On Android, if you are loading the app from a remote/testing server from https\n    // protocol, you need to enable mixed content mode to allow the WebView to load\n    // files from different schemes such as capacitor-content:// or capacitor-file://\n    \"allowMixedContent\": true,\n    // Android's default keyboard doesn't allow proper JS key capture\n    // You can use a simpler keyboard enabling this preference\n    // Be aware that this keyboard has some problems and limitations\n    \"captureInput\": true,\n    // Enables debugging of web contents (HTML / CSS / JavaScript) loaded into\n    // any WebViews of this application.\n    // This flag can be enabled in order to facilitate debugging of web layouts\n    // and JavaScript code running inside WebViews.\n    \"webContentsDebuggingEnabled\": true\n  },\n  \"ios\": {\n    // Configure the Swift version to be used for Cordova plugins.\n    // Default is 4.0\n    \"cordovaSwiftVersion\": \"3.0\",\n    // Minimum iOS version supported by the project.\n    // Default is 11.0\n    \"minVersion\": \"11.3\",\n    // Some Cordova plugins require to configure the linker flags\n    \"cordovaLinkerFlags\": [\"-ObjC\"]\n  }\n}</code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"native-configuration\">\n  <a class=\"heading-link\" href=\"#native-configuration\"><app-icon name=\"link\"></app-icon>\n  Native Configuration\n  </a>\n</h2>\n<p>iOS and Android each have configuration guides walking through making common changes to their behavior:</p>\n<p><a href=\"/docs/ios/configuration\">Configuring iOS</a></p>\n<p><a href=\"/docs/android/configuration\">Configuring Android</a></p>\n"}